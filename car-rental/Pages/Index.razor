@page "/"
@using System.Linq;
@using car_rental_business_logic.Classes;
@using car_rental_common.Interfaces;
@using car_rental_common.Enums;
@inject BookingProcessor BookingService

<PageTitle>Index</PageTitle>

<!-- Fixa bznz logic så att Cost fungerar (och allt annat för den delen)
    KmReturned, numera 
omplacera variabler på rätt ställe
ordna decor för cellerna beroende på status
fixa nullable types

fixa OdometerAfterDriving variabeln till user input FRÅN table - samma med Returned date!
Därifrån ska status påverkas (görs i bznz logic).

-->


<h3>Bookings</h3>
<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">RegNo</th>
            <th scope="col">Customer</th>
            <th scope="col">Odo. before driving (km)</th>
            <th scope="col">Odo. after driving (km)</th>
            <th scope="col">Rented Date</th>
            <th scope="col">Returned</th>
            <th scope="col">Status</th>
            <th scope="col">Total cost</th>
        </tr>
    </thead>
    <tbody>
        @foreach (IBooking booking in bookings)
        {
            <tr>
                <td>@booking.Vehicle.RegNo</td>
                <td>@booking.Customer.FirstName @booking.Customer.LastName</td>
                <td>@booking.OdometerBeforeDriving</td>
                <td><input @bind="booking.OdometerAfterDriving" /></td>
                <td><input type="date" @bind="booking.StartDate" placeholder="yyyy-MM-dd" pattern="\d{4}-\d{2}-\d{2}" /></td>
                <td><input type="date" @bind="booking.ReturnDate" placeholder="yyyy-MM-dd" pattern="\d{4}-\d{2}-\d{2}" /></td>
                <td>@booking.Vehicle.Status</td>
                <td>@BookingService.CalculateCostForBooking(booking)</td>
            </tr>
        }
    </tbody>
</table>

<h3>Customers</h3>
<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">Social Security No.</th>
            <th scope="col">First name</th>
            <th scope="col">Last name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (ICustomer customer in customers)
        {
            <tr>
                <td>@customer.SSN</td>
                <td>@customer.FirstName</td>
                <td>@customer.LastName</td>
            </tr>
        }
    </tbody>
</table>

<h3>Vehicles</h3>
<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">Reg No.</th>
            <th scope="col">Make</th>
            <th scope="col">Odometer</th>
            <th scope="col">Cost/Km</th>
            <th scope="col">Vehicle type</th>
            <th scope="col">Cost/Day</th>
            <th scope="col">Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (IVehicle vehicle in vehicles)
        {
            <tr>
                <td>@vehicle.RegNo</td>
                <td>@vehicle.Make</td>
                <td>@vehicle.Odometer</td>
                <td>@vehicle.CostKm</td>
                <td>@vehicle.VehicleType</td>
                <td>@vehicle.CostDay</td>
                <td>@vehicle.Status</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<IBooking> bookings;
    private List<ICustomer> customers;
    private List<IVehicle> vehicles;

    // Adding the missing ElementReference variable declaration
    private ElementReference dateInput;

    protected override void OnInitialized()
    {
        bookings = BookingService.GetBookings().ToList();
        customers = BookingService.GetCustomers().ToList();
        vehicles = BookingService.GetVehicles().ToList();
    }



    //<td>@(booking.ReturnDate == DateOnly.MinValue? "" : booking.ReturnDate.ToString())</td>
}